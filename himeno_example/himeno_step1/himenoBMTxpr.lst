%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S u m m a r y   R e p o r t
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Compilation
-----------
File     : /lus/nid00023/levesque/himeno_step1/himenoBMTxpr.f
Compiled : 07/10/13  11:23:54
Compiler : Version 8.1.9
Ftnlx    : Version 8128 (libcif 81032)
Target   : x86-64
Command  : /opt/cray/cce/8.1.9/cftn/x86-64/bin/ftn_driver.exe -hcpu=interlagos
           -haccel=nvidia_35 -DCRAYPAT -homp_trace -hpat_trace -hnetwork=gemini
           -L/opt/cray/perftools/6.1.1/lib64 -hdynamic -rm -eF -ohimeno_orig
           -I/opt/nvidia/cudatoolkit/5.0.35/include
           -I/opt/nvidia/cudatoolkit/5.0.35/extras/CUPTI/include
           -I/opt/nvidia/cudatoolkit/5.0.35/extras/Debugger/include
           -I/opt/cray/perftools/6.1.1/include
           -I/opt/cray/udreg/2.3.2-1.0402.7311.2.1.gem/include
           -I/opt/cray/ugni/5.0-1.0402.7128.7.6.gem/include
           -I/opt/cray/dmapp/4.0.1-1.0402.7439.5.1.gem/include
           -I/opt/cray/gni-headers/2.1-1.0402.7082.6.2.gem/include
           -I/opt/cray/xpmem/0.1-2.0402.44035.2.1.gem/include
           -I/opt/cray/pmi/4.0.1-1.0000.9421.73.3.gem/include
           -I/opt/cray/rca/1.0.0-2.0402.42153.2.106.gem/include
           -I/opt/cray-hss-devel/7.0.0/include
           -I/opt/cray/krca/1.0.0-2.0402.42157.2.94.gem/include
           -I/opt/cray/cce/8.1.9/craylibs/x86-64/include -haccel=nvidia_35
           -L/opt/nvidia/cudatoolkit/5.0.35/lib64
           -L/opt/nvidia/cudatoolkit/5.0.35/extras/CUPTI/lib64
           -L/opt/cray/nvidia/default/lib64 -lcuda
           -L/opt/cray/udreg/2.3.2-1.0402.7311.2.1.gem/lib64
           -L/opt/cray/ugni/5.0-1.0402.7128.7.6.gem/lib64
           -L/opt/cray/dmapp/4.0.1-1.0402.7439.5.1.gem/lib64
           -L/opt/cray/xpmem/0.1-2.0402.44035.2.1.gem/lib64
           -L/opt/cray/pmi/4.0.1-1.0000.9421.73.3.gem/lib64
           -L/opt/cray/rca/1.0.0-2.0402.42153.2.106.gem/lib64 -lrca
           -L/opt/cray/cce/8.1.9/craylibs/x86-64 -L/opt/gcc/4.4.4/snos/lib64
           -D__CRAYXE -D__CRAYXT_COMPUTE_LINUX_TARGET -D__TARGET_LINUX__
           -I/opt/cray/mpt/6.0.1/gni/mpich2-cray/81/include
           -I/opt/cray/libsci_acc/2.1.00/cray/81/x86_64/include
           -I/opt/cray/libsci/12.1.00/cray/81/interlagos/include
           -L/opt/cray/mpt/6.0.1/gni/mpich2-cray/81/lib
           -L/opt/cray/libsci_acc/2.1.00/cray/81/x86_64/lib
           -L/opt/cray/libsci/12.1.00/cray/81/interlagos/lib
           -lsci_acc_cray_nv35 -lsci_acc_cray_nv35_openacc -lscicpp_cray
           -lsci_cray_mp -lcufft -lcublas -lmpichf90_cray -lmpich_cray -lmpl
           -lpmi -lalpslli -lalpsutil -lpthread -lstdc++
           -L/usr/lib/alps himenoBMTxpr.f

ftnlx report
------------
Source   : /lus/nid00023/levesque/himeno_step1/himenoBMTxpr.f
Date     : 07/10/2013  11:23:56


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


     %%%    L o o p m a r k   L e g e n d    %%%

     Primary Loop Type        Modifiers
     ------- ---- ----        ---------
     A - Pattern matched      a - atomic memory operation
                              b - blocked
     C - Collapsed            c - conditional and/or computed
     D - Deleted               
     E - Cloned               f - fused
     G - Accelerated          g - partitioned
     I - Inlined              i - interchanged
     M - Multithreaded        m - partitioned
                              n - non-blocking remote transfer
                              p - partial
                              r - unrolled
                              s - shortloop
     V - Vectorized           w - unwound

     + - More messages listed at end of listing
     ------------------------------------------


    1.                   C*********************************************************************
    2.                   C
    3.                   C This benchmark test program is measuring a cpu performance
    4.                   C of floating point operation by a Poisson equation solver.
    5.                   CC
    6.                   C If you have any question, please ask me via email.
    7.                   C written by Ryutaro HIMENO, November 26, 2001.
    8.                   C Version 3.0
    9.                   C ----------------------------------------------
   10.                   C Ryutaro Himeno, Dr. of Eng.
   11.                   C Head of Computer Information Division,
   12.                   C RIKEN (The Institute of Pysical and Chemical Research)
   13.                   C Email : himeno@postman.riken.go.jp
   14.                   C -----------------------------------------------------------
   15.                   C You can adjust the size of this benchmark code to fit your target
   16.                   C computer. In that case, please chose following sets of
   17.                   C (mimax,mjmax,mkmax):
   18.                   C small : 65,33,33
   19.                   C small : 129,65,65
   20.                   C midium: 257,129,129
   21.                   C large : 513,257,257
   22.                   C ext.large: 1025,513,513
   23.                   C This program is to measure a computer performance in MFLOPS
   24.                   C by using a kernel which appears in a linear solver of pressure
   25.                   C Poisson eq. which appears in an incompressible Navier-Stokes solver.
   26.                   C A point-Jacobi method is employed in this solver as this method can 
   27.                   C be easyly vectrized and be parallelized.
   28.                   C ------------------
   29.                   C Finite-difference method, curvilinear coodinate system
   30.                   C Vectorizable and parallelizable on each grid point
   31.                   C No. of grid points : imax x jmax x kmax including boundaries
   32.                   C ------------------
   33.                   C A,B,C:coefficient matrix, wrk1: source term of Poisson equation
   34.                   C wrk2 : working area, OMEGA : relaxation parameter
   35.                   C BND:control variable for boundaries and objects ( = 0 or 1)
   36.                   C P: pressure
   37.                   C -------------------
   38.                         PROGRAM HIMENOBMTXP
   39.                   C
   40.                         IMPLICIT REAL*4(a-h,o-z)
   41.                   C
   42.                         include 'mpif.h'
   43.                         include 'param.h'
   44.                   C
   45.                   C     ttarget specifys the measuring period in sec
   46.                         PARAMETER (ttarget=60.0)
   47.                   C
   48.                         real*8  cpu,cpu0,cpu1,xmflops2,flop
   49.                   C
   50.                         omega=0.8
   51.                         mx= mx0-1
   52.                         my= my0-1
   53.                         mz= mz0-1
   54.                   C
   55.                   CC Initializing communicator
   56.  +                      call initcomm
   57.                   C
   58.                   CC Initializaing computational index
   59.  +                      call initmax(mx,my,mz,it)
   60.                   C
   61.                   CC Initializing matrixes
   62.  +                      call initmt(mz,it)
   63.                         if(id .eq. 0) then
   64.                            write(*,*) 'Sequential version array size'
   65.                            write(*,*) ' mimax=',mx0,' mjmax=',my0,' mkmax=',mz0
   66.                            write(*,*) 'Parallel version  array size'
   67.                            write(*,*) ' mimax=',mimax,' mjmax=',mjmax,' mkmax=',mkmax
   68.                            write(*,*) ' imax=',imax,' jmax=',jmax,' kmax=',kmax
   69.                            write(*,*) ' I-decomp= ',ndx,' J-decomp= ',ndy,
   70.                        >              ' K-decomp= ',ndz
   71.                            write(*,*)
   72.                         end if
   73.                   C
   74.                   CC Start measuring
   75.                   C
   76.                         nn=3
   77.                         if(id .eq. 0) then
   78.                            write(*,*) ' Start rehearsal measurement process.'
   79.                            write(*,*) ' Measure the performance in 3 times.'
   80.                         end if
   81.                   C
   82.                         gosa= 0.0
   83.                         cpu= 0.0
   84.  +                      call mpi_barrier(mpi_comm_world,ierr)
   85.  +                      cpu0= mpi_wtime()
   86.                   C Jacobi iteration
   87.  +                      call jacobi(nn,gosa)
   88.  +                      cpu1= mpi_wtime() - cpu0
   89.                   C
   90.  +                      call mpi_allreduce(cpu1,
   91.                        >                   cpu,
   92.                        >                   1,
   93.                        >                   mpi_real8,
   94.                        >                   mpi_max,
   95.                        >                   mpi_comm_world,
   96.                        >                   ierr)
   97.                   C
   98.                         flop=real(mx-2)*real(my-2)*real(mz-2)*34.0
   99.                         if(cpu .ne. 0.0) xmflops2=flop/cpu*1.0d-6*real(nn)
  100.                         if(id .eq. 0) then
  101.                            write(*,*) '  MFLOPS:',xmflops2,'  time(s):',cpu,gosa
  102.                         end if
  103.  +                      nn= int(ttarget/(cpu/3.0))
  104.                   C
  105.                   C     end the test loop
  106.                         if(id .eq. 0) then
  107.                            write(*,*) 'Now, start the actual measurement process.'
  108.                            write(*,*) 'The loop will be excuted in',nn,' times.'
  109.                            write(*,*) 'This will take about one minute.'
  110.                            write(*,*) 'Wait for a while.'
  111.                         end if
  112.                   C
  113.                         gosa= 0.0
  114.                         cpu= 0.0
  115.  +                      call mpi_barrier(mpi_comm_world,ierr)
  116.  +                      cpu0= mpi_wtime()
  117.                   C Jacobi iteration
  118.  +                      call jacobi(nn,gosa)
  119.  +                      cpu1= mpi_wtime() - cpu0
  120.                   C
  121.  +                      call mpi_reduce(cpu1,
  122.                        >                cpu,
  123.                        >                1,
  124.                        >                mpi_real8,
  125.                        >                mpi_max,
  126.                        >                0,
  127.                        >                mpi_comm_world,
  128.                        >                ierr)
  129.                   C
  130.                         if(id .eq. 0) then
  131.                            if(cpu .ne. 0.0)  xmflops2=flop*1.0d-6/cpu*real(nn)
  132.                   C
  133.                            write(*,*) ' Loop executed for ',nn,' times'
  134.                            write(*,*) ' Gosa :',gosa
  135.                            write(*,*) ' MFLOPS:',xmflops2, '  time(s):',cpu
  136.  +                         score=xmflops2/82.84
  137.                            write(*,*) ' Score based on Pentium III 600MHz :',score
  138.                         end if
  139.  +                      call mpi_finalize(ierr)
  140.                   C
  141.                         stop
  142.                         END

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 56 
  "initcomm" (called from "HIMENOBMTXP") was not inlined because the call site will not flatten.  Routine "mpi_init" is missing.

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 59 
  "initmax" (called from "HIMENOBMTXP") was not inlined because the call site will not flatten.  Routine "mpi_type_vector" is
  missing.

ftn-3171 ftn: IPA File = himenoBMTxpr.f, Line = 62 
  "initmt" (called from "HIMENOBMTXP") was not inlined because it is not in the body of a loop.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 84 
  "mpi_barrier" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 85 
  "mpi_wtime" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 87 
  "jacobi" (called from "HIMENOBMTXP") was not inlined because the call site will not flatten.  Routine "mpi_irecv" is missing.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 88 
  "mpi_wtime" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 90 
  "mpi_allreduce" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-6010 ftn: SCALAR File = himenoBMTxpr.f, Line = 103 
  A divide was turned into a multiply by a reciprocal

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 115 
  "mpi_barrier" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 116 
  "mpi_wtime" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 118 
  "jacobi" (called from "HIMENOBMTXP") was not inlined because the call site will not flatten.  Routine "mpi_irecv" is missing.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 119 
  "mpi_wtime" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 121 
  "mpi_reduce" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.

ftn-6010 ftn: SCALAR File = himenoBMTxpr.f, Line = 136 
  A divide was turned into a multiply by a reciprocal

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 139 
  "mpi_finalize" (called from "HIMENOBMTXP") was not inlined because the compiler was unable to locate the routine.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  143.                   C
  144.                   C
  145.                   C**************************************************************
  146.                         subroutine initmt(mz,it)
  147.                   C**************************************************************
  148.                         IMPLICIT REAL*4(a-h,o-z)
  149.                   C
  150.                         include 'param.h'
  151.                   C
  152.    C------------<       do k=1,mkmax
  153.    C C----------<          do j=1,mjmax
  154.    C C VCr4-----<             do i=1,mimax
  155.    C C VCr4                      a(i,j,k,1)=0.0
  156.    C C VCr4                      a(i,j,k,2)=0.0
  157.    C C VCr4                      a(i,j,k,3)=0.0
  158.    C C VCr4                      a(i,j,k,4)=0.0
  159.    C C VCr4                      b(i,j,k,1)=0.0
  160.    C C VCr4                      b(i,j,k,2)=0.0
  161.    C C VCr4                      b(i,j,k,3)=0.0
  162.    C C VCr4                      c(i,j,k,1)=0.0
  163.    C C VCr4                      c(i,j,k,2)=0.0
  164.    C C VCr4                      c(i,j,k,3)=0.0
  165.    C C VCr4 A--<>                p(i,j,k)=0.0
  166.    C C VCr4 A--<>                wrk1(i,j,k)=0.0   
  167.    C C VCr4 A--<>                wrk2(i,j,k)=0.0   
  168.    C C VCr4 A--<>                bnd(i,j,k)=0.0 
  169.    C C VCr4----->             enddo
  170.    C C---------->          enddo
  171.    C------------>       enddo
  172.                   C
  173.  + 1------------<       do k=1,kmax
  174.  + 1 2----------<          do j=1,jmax
  175.    1 2 Vr4------<             do i=1,imax
  176.    1 2 Vr4                       a(i,j,k,1)=1.0
  177.    1 2 Vr4                       a(i,j,k,2)=1.0
  178.    1 2 Vr4                       a(i,j,k,3)=1.0
  179.    1 2 Vr4                       a(i,j,k,4)=1.0/6.0
  180.    1 2 Vr4                       b(i,j,k,1)=0.0
  181.    1 2 Vr4                       b(i,j,k,2)=0.0
  182.    1 2 Vr4                       b(i,j,k,3)=0.0
  183.    1 2 Vr4                       c(i,j,k,1)=1.0
  184.    1 2 Vr4                       c(i,j,k,2)=1.0
  185.    1 2 Vr4                       c(i,j,k,3)=1.0
  186.  + 1 2 Vr4 A---<>                p(i,j,k)=float((k-1+it)*(k-1+it))
  187.    1 2 Vr4             >                       /float((mz-1)*(mz-1))
  188.    1 2 Vr4 A---<>                wrk1(i,j,k)=0.0   
  189.    1 2 Vr4 A---<>                wrk2(i,j,k)=0.0   
  190.    1 2 Vr4 A---<>                bnd(i,j,k)=1.0
  191.    1 2 Vr4------>             enddo
  192.    1 2---------->          enddo
  193.    1------------>       enddo
  194.                   C
  195.                         return
  196.                         end

ftn-6003 ftn: SCALAR File = himenoBMTxpr.f, Line = 152 
  A loop starting at line 152 was collapsed into the loop starting at line 154.

ftn-6003 ftn: SCALAR File = himenoBMTxpr.f, Line = 153 
  A loop starting at line 153 was collapsed into the loop starting at line 154.

ftn-6005 ftn: SCALAR File = himenoBMTxpr.f, Line = 154 
  A loop starting at line 154 was unrolled 4 times.

ftn-6204 ftn: VECTOR File = himenoBMTxpr.f, Line = 154 
  A loop starting at line 154 was vectorized.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 165 
  A statement was replaced by a library call.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 166 
  A statement was replaced by a library call.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 167 
  A statement was replaced by a library call.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 168 
  A statement was replaced by a library call.

ftn-6294 ftn: VECTOR File = himenoBMTxpr.f, Line = 173 
  A loop starting at line 173 was not vectorized because a better candidate was found at line 175.

ftn-6294 ftn: VECTOR File = himenoBMTxpr.f, Line = 174 
  A loop starting at line 174 was not vectorized because a better candidate was found at line 175.

ftn-6005 ftn: SCALAR File = himenoBMTxpr.f, Line = 175 
  A loop starting at line 175 was unrolled 4 times.

ftn-6204 ftn: VECTOR File = himenoBMTxpr.f, Line = 175 
  A loop starting at line 175 was vectorized.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 186 
  A statement was replaced by a library call.

ftn-6010 ftn: SCALAR File = himenoBMTxpr.f, Line = 186 
  A divide was turned into a multiply by a reciprocal

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 188 
  A statement was replaced by a library call.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 189 
  A statement was replaced by a library call.

ftn-6231 ftn: VECTOR File = himenoBMTxpr.f, Line = 190 
  A statement was replaced by a library call.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  197.                   C
  198.                   C*************************************************************
  199.                         subroutine jacobi(nn,gosa)
  200.                   C*************************************************************
  201.                         IMPLICIT REAL*4(a-h,o-z)
  202.                   C
  203.                         include 'mpif.h'
  204.                         include 'param.h'
  205.                   C
  206.  + 1------------<       DO loop=1,nn
  207.    1                       gosa=0.0
  208.    1                       wgosa=0.0
  209.  + 1 2----------<          DO K=2,kmax-1
  210.  + 1 2 3--------<             DO J=2,jmax-1
  211.    1 2 3 Vr3----<                DO I=2,imax-1
  212.    1 2 3 Vr3                        S0=a(I,J,K,1)*p(I+1,J,K)+a(I,J,K,2)*p(I,J+1,K)
  213.    1 2 3 Vr3           1                 +a(I,J,K,3)*p(I,J,K+1)
  214.    1 2 3 Vr3           2                 +b(I,J,K,1)*(p(I+1,J+1,K)-p(I+1,J-1,K)
  215.    1 2 3 Vr3           3                 -p(I-1,J+1,K)+p(I-1,J-1,K))
  216.    1 2 3 Vr3           4                 +b(I,J,K,2)*(p(I,J+1,K+1)-p(I,J-1,K+1)
  217.    1 2 3 Vr3           5                 -p(I,J+1,K-1)+p(I,J-1,K-1))
  218.    1 2 3 Vr3           6                 +b(I,J,K,3)*(p(I+1,J,K+1)-p(I-1,J,K+1)
  219.    1 2 3 Vr3           7                 -p(I+1,J,K-1)+p(I-1,J,K-1))
  220.    1 2 3 Vr3           8                 +c(I,J,K,1)*p(I-1,J,K)+c(I,J,K,2)*p(I,J-1,K)
  221.    1 2 3 Vr3           9                 +c(I,J,K,3)*p(I,J,K-1)+wrk1(I,J,K)
  222.    1 2 3 Vr3                        SS=(S0*a(I,J,K,4)-p(I,J,K))*bnd(I,J,K)
  223.    1 2 3 Vr3                        WGOSA=WGOSA+SS*SS
  224.    1 2 3 Vr3                        wrk2(I,J,K)=p(I,J,K)+OMEGA *SS
  225.    1 2 3 Vr3---->                enddo
  226.    1 2 3-------->             enddo
  227.    1 2---------->          enddo
  228.    1              C     
  229.  + 1 2----------<          DO K=2,kmax-1
  230.  + 1 2 3--------<             DO J=2,jmax-1
  231.    1 2 3 A------<                DO I=2,imax-1
  232.    1 2 3 A                          p(I,J,K)=wrk2(I,J,K)
  233.    1 2 3 A------>                enddo
  234.    1 2 3-------->             enddo
  235.    1 2---------->          enddo
  236.    1              C
  237.  + 1                       call sendp(ndx,ndy,ndz)
  238.    1              C
  239.  + 1                       call mpi_allreduce(wgosa,
  240.    1                   >                      gosa,
  241.    1                   >                      1,
  242.    1                   >                      mpi_real4,
  243.    1                   >                      mpi_sum,
  244.    1                   >                      mpi_comm_world,
  245.    1                   >                      ierr)
  246.    1              C
  247.    1------------>       enddo
  248.                   CC End of iteration
  249.                         return
  250.                         end

ftn-6288 ftn: VECTOR File = himenoBMTxpr.f, Line = 206 
  A loop starting at line 206 was not vectorized because it contains a call to subroutine "sendp" on line 237.

ftn-6294 ftn: VECTOR File = himenoBMTxpr.f, Line = 209 
  A loop starting at line 209 was not vectorized because a better candidate was found at line 211.

ftn-6294 ftn: VECTOR File = himenoBMTxpr.f, Line = 210 
  A loop starting at line 210 was not vectorized because a better candidate was found at line 211.

ftn-6005 ftn: SCALAR File = himenoBMTxpr.f, Line = 211 
  A loop starting at line 211 was unrolled 3 times.

ftn-6204 ftn: VECTOR File = himenoBMTxpr.f, Line = 211 
  A loop starting at line 211 was vectorized.

ftn-6294 ftn: VECTOR File = himenoBMTxpr.f, Line = 229 
  A loop starting at line 229 was not vectorized because a better candidate was found at line 231.

ftn-6294 ftn: VECTOR File = himenoBMTxpr.f, Line = 230 
  A loop starting at line 230 was not vectorized because a better candidate was found at line 231.

ftn-6202 ftn: VECTOR File = himenoBMTxpr.f, Line = 231 
  A loop starting at line 231 was replaced by a library call.

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 237 
  "sendp" (called from "jacobi") was not inlined because the call site will not flatten.  Routine "mpi_irecv" is missing.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 239 
  "mpi_allreduce" (called from "jacobi") was not inlined because the compiler was unable to locate the routine.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  251.                   c
  252.                   c
  253.                   c
  254.                         subroutine initcomm
  255.                   c
  256.                         IMPLICIT REAL*4(a-h,o-z)
  257.                   c
  258.                         include 'mpif.h'
  259.                         include 'param.h'
  260.                   c
  261.                         logical    ipd(3),ir
  262.                         dimension  idm(3)
  263.                   c
  264.  +                      call mpi_init(ierr)
  265.  +                      call mpi_comm_size(mpi_comm_world,npe,ierr)
  266.  +                      call mpi_comm_rank(mpi_comm_world,id,ierr)
  267.                   C
  268.                         if(ndx*ndy*ndz .ne. npe) then
  269.                            if(id .eq. 0) then
  270.                               write(*,*) 'Invalid number of PE'
  271.                               write(*,*) 'Please check partitioning pattern'
  272.                               write(*,*) '                 or number of  PE'
  273.                            end if
  274.  +                         call mpi_finalize(ierr)
  275.                            stop
  276.                         end if
  277.                   C
  278.                         icomm= mpi_comm_world
  279.                   c
  280.                         idm(1)= ndx
  281.                         idm(2)= ndy
  282.                         idm(3)= ndz
  283.                   C
  284.                         ipd(1)= .false.
  285.                         ipd(2)= .false.
  286.                         ipd(3)= .false.
  287.                         ir= .false.
  288.                   C
  289.  +                      call mpi_cart_create(icomm,
  290.                        >                     ndims,
  291.                        >                     idm,
  292.                        >                     ipd,
  293.                        >                     ir,
  294.                        >                     mpi_comm_cart,
  295.                        >                     ierr)
  296.  +                      call mpi_cart_get(mpi_comm_cart,
  297.                        >                  ndims,
  298.                        >                  idm,
  299.                        >                  ipd,
  300.                        >                  iop,
  301.                        >                  ierr)
  302.                   c
  303.                   c
  304.                         if(ndz .gt. 1) then
  305.  +                         call mpi_cart_shift(mpi_comm_cart,
  306.                        >                       2,
  307.                        >                       1,
  308.                        >                       npz(1),
  309.                        >                       npz(2),
  310.                        >                       ierr)
  311.                         end if
  312.                   c
  313.                         if(ndy .gt. 1) then
  314.  +                         call mpi_cart_shift(mpi_comm_cart,
  315.                        >                       1,
  316.                        >                       1,
  317.                        >                       npy(1),
  318.                        >                       npy(2),
  319.                        >                       ierr)
  320.                         end if
  321.                   c
  322.                         if(ndx .gt. 1) then
  323.  +                         call mpi_cart_shift(mpi_comm_cart,
  324.                        >                       0,
  325.                        >                       1,
  326.                        >                       npx(1),
  327.                        >                       npx(2),
  328.                        >                       ierr)
  329.                         end if
  330.                   c
  331.                         return
  332.                         end

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 264 
  "mpi_init" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 265 
  "mpi_comm_size" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 266 
  "mpi_comm_rank" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 274 
  "mpi_finalize" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 289 
  "mpi_cart_create" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 296 
  "mpi_cart_get" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 305 
  "mpi_cart_shift" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 314 
  "mpi_cart_shift" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 323 
  "mpi_cart_shift" (called from "INITCOMM") was not inlined because the compiler was unable to locate the routine.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  333.                   c
  334.                   c
  335.                   c
  336.                         subroutine initmax(mx,my,mz,ks)
  337.                   c
  338.                         IMPLICIT REAL*4(a-h,o-z)
  339.                   c
  340.                         include 'param.h'
  341.                         include 'mpif.h'
  342.                   C
  343.                         integer  itmp,ks
  344.                         integer  mx1(0:ndx),my1(0:ndy),mz1(0:ndz)
  345.                         integer  mx2(0:ndx),my2(0:ndy),mz2(0:ndz)
  346.                   C
  347.                   CC    define imax, communication direction
  348.                         itmp= mx/ndx
  349.                         mx1(0)= 0
  350.  + r4-----------<       do  i=1,ndx
  351.    r4                      if(i .le. mod(mx,ndx)) then
  352.    r4                         mx1(i)= mx1(i-1) + itmp + 1
  353.    r4                      else
  354.    r4                         mx1(i)= mx1(i-1) + itmp
  355.    r4                      end if
  356.    r4----------->       end do
  357.  + w------------<       do i=0,ndx-1
  358.    w                       mx2(i)= mx1(i+1) - mx1(i)
  359.    w                       if(i .ne. 0)     mx2(i)= mx2(i) + 1
  360.    w                       if(i .ne. ndx-1) mx2(i)= mx2(i) + 1
  361.    w------------>       end do
  362.                   c
  363.                         itmp= my/ndy
  364.                         my1(0)= 0
  365.  + r4-----------<       do  i=1,ndy
  366.    r4                      if(i .le. mod(my,ndy)) then
  367.    r4                         my1(i)= my1(i-1) + itmp + 1
  368.    r4                      else
  369.    r4                         my1(i)= my1(i-1) + itmp
  370.    r4                      end if
  371.    r4----------->       end do
  372.  + w------------<       do i=0,ndy-1
  373.    w                       my2(i)= my1(i+1) - my1(i)
  374.    w                       if(i .ne. 0)      my2(i)= my2(i) + 1
  375.    w                       if(i .ne. ndy-1)  my2(i)= my2(i) + 1
  376.    w------------>       end do
  377.                   c
  378.                         itmp= mz/ndz
  379.                         mz1(0)= 0
  380.  + r4-----------<       do  i=1,ndz
  381.    r4                      if(i .le. mod(mz,ndz)) then
  382.    r4                         mz1(i)= mz1(i-1) + itmp + 1
  383.    r4                      else
  384.    r4                         mz1(i)= mz1(i-1) + itmp
  385.    r4                      end if
  386.    r4----------->       end do
  387.  + w------------<       do i=0,ndz-1
  388.    w                       mz2(i)= mz1(i+1) - mz1(i)
  389.    w                       if(i .ne. 0)      mz2(i)= mz2(i) + 1
  390.    w                       if(i .ne. ndz-1)  mz2(i)= mz2(i) + 1
  391.    w------------>       end do
  392.                   c
  393.                         imax= mx2(iop(1))
  394.                         jmax= my2(iop(2))
  395.                         kmax= mz2(iop(3))
  396.                   c
  397.                         if(iop(3) .eq. 0) then
  398.                            ks= mz1(iop(3))
  399.                         else
  400.                            ks= mz1(iop(3)) - 1
  401.                         end if
  402.                   c
  403.                   c     j-k plane  divied by i-direction
  404.                         if(ndx .gt. 1) then
  405.  +                         call mpi_type_vector(jmax*kmax,
  406.                        >                        1,
  407.                        >                        mimax,
  408.                        >                        mpi_real4,
  409.                        >                        jkvec,
  410.                        >                        ierr)
  411.  +                         call mpi_type_commit(jkvec,
  412.                        >                        ierr)
  413.                         end if
  414.                   c
  415.                   c     i-k plane  divied by j-direction
  416.                         if(ndy .gt. 1) then
  417.  +                         call mpi_type_vector(kmax,
  418.                        >                        imax,
  419.                        >                        mimax*mjmax,
  420.                        >                        mpi_real4,
  421.                        >                        ikvec,
  422.                        >                        ierr)
  423.  +                         call mpi_type_commit(ikvec,
  424.                        >                        ierr)
  425.                         end if
  426.                   c
  427.                   c     new vector k-direction
  428.                         if(ndz .gt. 1) then
  429.  +                         call mpi_type_vector(jmax,
  430.                        >                        imax,
  431.                        >                        mimax,
  432.                        >                        mpi_real4,
  433.                        >                        ijvec,
  434.                        >                        ierr)
  435.  +                         call mpi_type_commit(ijvec,
  436.                        >                        ierr)
  437.                         end if
  438.                   c
  439.                         return
  440.                         end

ftn-6005 ftn: SCALAR File = himenoBMTxpr.f, Line = 350 
  A loop starting at line 350 was unrolled 4 times.

ftn-6254 ftn: VECTOR File = himenoBMTxpr.f, Line = 350 
  A loop starting at line 350 was not vectorized because a recurrence was found on "mx1" at line 352.

ftn-6271 ftn: VECTOR File = himenoBMTxpr.f, Line = 357 
  A loop starting at line 357 was not vectorized because its trip count is too small.

ftn-6008 ftn: SCALAR File = himenoBMTxpr.f, Line = 357 
  A loop starting at line 357 was unwound.

ftn-6005 ftn: SCALAR File = himenoBMTxpr.f, Line = 365 
  A loop starting at line 365 was unrolled 4 times.

ftn-6254 ftn: VECTOR File = himenoBMTxpr.f, Line = 365 
  A loop starting at line 365 was not vectorized because a recurrence was found on "my1" at line 367.

ftn-6271 ftn: VECTOR File = himenoBMTxpr.f, Line = 372 
  A loop starting at line 372 was not vectorized because its trip count is too small.

ftn-6008 ftn: SCALAR File = himenoBMTxpr.f, Line = 372 
  A loop starting at line 372 was unwound.

ftn-6005 ftn: SCALAR File = himenoBMTxpr.f, Line = 380 
  A loop starting at line 380 was unrolled 4 times.

ftn-6254 ftn: VECTOR File = himenoBMTxpr.f, Line = 380 
  A loop starting at line 380 was not vectorized because a recurrence was found on "mz1" at line 382.

ftn-6271 ftn: VECTOR File = himenoBMTxpr.f, Line = 387 
  A loop starting at line 387 was not vectorized because its trip count is too small.

ftn-6008 ftn: SCALAR File = himenoBMTxpr.f, Line = 387 
  A loop starting at line 387 was unwound.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 405 
  "mpi_type_vector" (called from "initmax") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 411 
  "mpi_type_commit" (called from "initmax") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 417 
  "mpi_type_vector" (called from "initmax") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 423 
  "mpi_type_commit" (called from "initmax") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 429 
  "mpi_type_vector" (called from "initmax") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 435 
  "mpi_type_commit" (called from "initmax") was not inlined because the compiler was unable to locate the routine.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  441.                   c
  442.                   c
  443.                   c
  444.                         subroutine sendp(ndx,ndy,ndz)
  445.                   c
  446.                         IMPLICIT REAL*4(a-h,o-z)
  447.                   C
  448.                         if(ndz .gt. 1) then
  449.  +                         call sendp3()
  450.                         end if
  451.                   c
  452.                         if(ndy .gt. 1) then
  453.  +                         call sendp2()
  454.                         end if
  455.                   c
  456.                         if(ndx .gt. 1) then
  457.  +                         call sendp1()
  458.                         end if
  459.                   c
  460.                         return
  461.                         end

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 449 
  "sendp3" (called from "sendp") was not inlined because the call site will not flatten.  Routine "mpi_irecv" is missing.

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 453 
  "sendp2" (called from "sendp") was not inlined because the call site will not flatten.  Routine "mpi_irecv" is missing.

ftn-3118 ftn: IPA File = himenoBMTxpr.f, Line = 457 
  "sendp1" (called from "sendp") was not inlined because the call site will not flatten.  Routine "mpi_irecv" is missing.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  462.                   c
  463.                   c
  464.                   c
  465.                         subroutine sendp3()
  466.                   c
  467.                         IMPLICIT REAL*4(a-h,o-z)
  468.                   c
  469.                         include 'mpif.h'
  470.                         include 'param.h'
  471.                   c
  472.                         dimension ist(mpi_status_size,0:3),ireq(0:3)
  473.                         data ireq /4*mpi_request_null/
  474.                   c
  475.  +                      call mpi_irecv(p(1,1,kmax),
  476.                        >               1,
  477.                        >               ijvec,
  478.                        >               npz(2),
  479.                        >               1,
  480.                        >               mpi_comm_cart,
  481.                        >               ireq(3),
  482.                        >               ierr)
  483.                   c
  484.  +                      call mpi_irecv(p(1,1,1),
  485.                        >               1,
  486.                        >               ijvec,
  487.                        >               npz(1),
  488.                        >               2,
  489.                        >               mpi_comm_cart,
  490.                        >               ireq(2),
  491.                        >               ierr)
  492.                   c
  493.  +                      call mpi_isend(p(1,1,2),
  494.                        >               1,
  495.                        >               ijvec,
  496.                        >               npz(1),
  497.                        >               1,
  498.                        >               mpi_comm_cart,
  499.                        >               ireq(0),
  500.                        >               ierr)
  501.                   c
  502.  +                      call mpi_isend(p(1,1,kmax-1),
  503.                        >               1,
  504.                        >               ijvec,
  505.                        >               npz(2),
  506.                        >               2,
  507.                        >               mpi_comm_cart,
  508.                        >               ireq(1),
  509.                        >               ierr)
  510.                   c
  511.  +                      call mpi_waitall(4,
  512.                        >                 ireq,
  513.                        >                 ist,
  514.                        >                 ierr)
  515.                   c
  516.                         return
  517.                         end

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 475 
  "mpi_irecv" (called from "sendp3") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 484 
  "mpi_irecv" (called from "sendp3") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 493 
  "mpi_isend" (called from "sendp3") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 502 
  "mpi_isend" (called from "sendp3") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 511 
  "mpi_waitall" (called from "sendp3") was not inlined because the compiler was unable to locate the routine.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  518.                   c
  519.                   c
  520.                   c
  521.                         subroutine sendp2()
  522.                   c
  523.                         IMPLICIT REAL*4(a-h,o-z)
  524.                   c
  525.                         include 'mpif.h'
  526.                         include 'param.h'
  527.                   c
  528.                         dimension ist(mpi_status_size,0:3),ireq(0:3)
  529.                         data ireq /4*mpi_request_null/
  530.                   c
  531.  +                      call mpi_irecv(p(1,1,1),
  532.                        >               1,
  533.                        >               ikvec,
  534.                        >               npy(1),
  535.                        >               2,
  536.                        >               mpi_comm_cart,
  537.                        >               ireq(3),
  538.                        >               ierr)
  539.                   c
  540.  +                      call mpi_irecv(p(1,jmax,1),
  541.                        >               1,
  542.                        >               ikvec,
  543.                        >               npy(2),
  544.                        >               1,
  545.                        >               mpi_comm_cart,
  546.                        >               ireq(2),
  547.                        >               ierr)
  548.                   c
  549.  +                      call mpi_isend(p(1,2,1),
  550.                        >               1,
  551.                        >               ikvec,
  552.                        >               npy(1),
  553.                        >               1,
  554.                        >               mpi_comm_cart,
  555.                        >               ireq(0),
  556.                        >               ierr)
  557.                   c
  558.  +                      call mpi_isend(p(1,jmax-1,1),
  559.                        >               1,
  560.                        >               ikvec,
  561.                        >               npy(2),
  562.                        >               2,
  563.                        >               mpi_comm_cart,
  564.                        >               ireq(1),
  565.                        >               ierr)
  566.                   c
  567.  +                      call mpi_waitall(4,
  568.                        >                 ireq,
  569.                        >                 ist,
  570.                        >                 ierr)
  571.                   c
  572.                         return
  573.                         end

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 531 
  "mpi_irecv" (called from "sendp2") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 540 
  "mpi_irecv" (called from "sendp2") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 549 
  "mpi_isend" (called from "sendp2") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 558 
  "mpi_isend" (called from "sendp2") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 567 
  "mpi_waitall" (called from "sendp2") was not inlined because the compiler was unable to locate the routine.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
                          S o u r c e   L i s t i n g
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  574.                   c
  575.                   c
  576.                   c
  577.                         subroutine sendp1()
  578.                   c
  579.                         IMPLICIT REAL*4(a-h,o-z)
  580.                   c
  581.                         include 'mpif.h'
  582.                         include 'param.h'
  583.                   c
  584.                         dimension ist(mpi_status_size,0:3),ireq(0:3)
  585.                         data ireq /4*mpi_request_null/
  586.                   c
  587.  +                      call mpi_irecv(p(1,1,1),
  588.                        >               1,
  589.                        >               jkvec,
  590.                        >               npx(1),
  591.                        >               2,
  592.                        >               mpi_comm_cart,
  593.                        >               ireq(3),
  594.                        >               ierr)
  595.                   c
  596.  +                      call mpi_irecv(p(imax,1,1),
  597.                        >               1,
  598.                        >               jkvec,
  599.                        >               npx(2),
  600.                        >               1,
  601.                        >               mpi_comm_cart,
  602.                        >               ireq(2),
  603.                        >               ierr)
  604.                   c
  605.  +                      call mpi_isend(p(2,1,1),
  606.                        >               1,
  607.                        >               jkvec,
  608.                        >               npx(1),
  609.                        >               1,
  610.                        >               mpi_comm_cart,
  611.                        >               ireq(0),
  612.                        >               ierr)
  613.                   c
  614.  +                      call mpi_isend(p(imax-1,1,1),
  615.                        >               1,
  616.                        >               jkvec,
  617.                        >               npx(2),
  618.                        >               2,
  619.                        >               mpi_comm_cart,
  620.                        >               ireq(1),
  621.                        >               ierr)
  622.                   c
  623.  +                      call mpi_waitall(4,
  624.                        >                 ireq,
  625.                        >                 ist,
  626.                        >                 ierr)
  627.                   c
  628.                         return
  629.                         end

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 587 
  "mpi_irecv" (called from "sendp1") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 596 
  "mpi_irecv" (called from "sendp1") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 605 
  "mpi_isend" (called from "sendp1") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 614 
  "mpi_isend" (called from "sendp1") was not inlined because the compiler was unable to locate the routine.

ftn-3021 ftn: IPA File = himenoBMTxpr.f, Line = 623 
  "mpi_waitall" (called from "sendp1") was not inlined because the compiler was unable to locate the routine.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
